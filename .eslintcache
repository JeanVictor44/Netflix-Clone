[{"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\index.tsx":"1","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\App.tsx":"2","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\context\\index.tsx":"3","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\styles\\global.ts":"4","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\routes\\index.tsx":"5","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\context\\DetailsSerie\\index.tsx":"6","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\context\\TrailerModal\\index.tsx":"7","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\context\\HomeMovies\\index.tsx":"8","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\pages\\Profiles\\index.tsx":"9","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\pages\\Login\\index.tsx":"10","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\pages\\Browse\\index.tsx":"11","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\pages\\CreateProfile\\index.tsx":"12","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\pages\\Register\\index.tsx":"13","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\api\\Tmdb\\index.ts":"14","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\api\\Youtube\\index.ts":"15","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\pages\\Profiles\\style.ts":"16","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\pages\\Login\\style.ts":"17","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\pages\\CreateProfile\\style.ts":"18","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\pages\\Register\\style.ts":"19","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\api\\Youtube\\request.ts":"20","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\api\\Tmdb\\request.ts":"21","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\constants\\index.ts":"22","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\Profile\\index.tsx":"23","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\Header\\index.tsx":"24","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\FormBox\\index.tsx":"25","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\TrailerModal\\index.tsx":"26","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\Loader\\index.tsx":"27","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\BrowseHeader\\index.tsx":"28","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\MainSerie\\index.tsx":"29","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\MovieListsWrapper\\index.tsx":"30","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\AddProfile\\index.tsx":"31","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\constants\\user-data-key.ts":"32","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\constants\\user-key.ts":"33","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\Profile\\style.ts":"34","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\Header\\style.ts":"35","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\TrailerModal\\style.ts":"36","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\FormBox\\style.ts":"37","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\Loader\\style.ts":"38","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\MainSerie\\style.ts":"39","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\BrowseHeader\\style.ts":"40","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\AddProfile\\style.ts":"41","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\MovieList\\index.tsx":"42","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\MovieList\\style.ts":"43"},{"size":243,"mtime":1657495323981,"results":"44","hashOfConfig":"45"},{"size":308,"mtime":1657495323965,"results":"46","hashOfConfig":"45"},{"size":602,"mtime":1657495323981,"results":"47","hashOfConfig":"45"},{"size":833,"mtime":1657495323989,"results":"48","hashOfConfig":"45"},{"size":737,"mtime":1657495323989,"results":"49","hashOfConfig":"45"},{"size":1211,"mtime":1657495323981,"results":"50","hashOfConfig":"45"},{"size":1022,"mtime":1657495323981,"results":"51","hashOfConfig":"45"},{"size":2702,"mtime":1657495323981,"results":"52","hashOfConfig":"45"},{"size":1253,"mtime":1657495323981,"results":"53","hashOfConfig":"45"},{"size":3085,"mtime":1657495323981,"results":"54","hashOfConfig":"45"},{"size":814,"mtime":1657495323981,"results":"55","hashOfConfig":"45"},{"size":2312,"mtime":1657497688719,"results":"56","hashOfConfig":"45"},{"size":3485,"mtime":1657495323981,"results":"57","hashOfConfig":"45"},{"size":1215,"mtime":1657495323965,"results":"58","hashOfConfig":"45"},{"size":409,"mtime":1657495323965,"results":"59","hashOfConfig":"45"},{"size":868,"mtime":1657495323981,"results":"60","hashOfConfig":"45"},{"size":593,"mtime":1657495323981,"results":"61","hashOfConfig":"45"},{"size":2569,"mtime":1657498032641,"results":"62","hashOfConfig":"45"},{"size":471,"mtime":1657495323989,"results":"63","hashOfConfig":"45"},{"size":122,"mtime":1657495323965,"results":"64","hashOfConfig":"45"},{"size":106,"mtime":1657495323965,"results":"65","hashOfConfig":"45"},{"size":86,"mtime":1657495323981,"results":"66","hashOfConfig":"45"},{"size":385,"mtime":1657495323981,"results":"67","hashOfConfig":"45"},{"size":265,"mtime":1657495323973,"results":"68","hashOfConfig":"45"},{"size":384,"mtime":1657495323973,"results":"69","hashOfConfig":"45"},{"size":2174,"mtime":1657495323981,"results":"70","hashOfConfig":"45"},{"size":191,"mtime":1657495323973,"results":"71","hashOfConfig":"45"},{"size":1226,"mtime":1657495323973,"results":"72","hashOfConfig":"45"},{"size":1887,"mtime":1657495323973,"results":"73","hashOfConfig":"45"},{"size":492,"mtime":1657495323973,"results":"74","hashOfConfig":"45"},{"size":296,"mtime":1657495323973,"results":"75","hashOfConfig":"45"},{"size":55,"mtime":1657495323981,"results":"76","hashOfConfig":"45"},{"size":46,"mtime":1657495323981,"results":"77","hashOfConfig":"45"},{"size":376,"mtime":1657495323981,"results":"78","hashOfConfig":"45"},{"size":269,"mtime":1657495323973,"results":"79","hashOfConfig":"45"},{"size":559,"mtime":1657495323981,"results":"80","hashOfConfig":"45"},{"size":2059,"mtime":1657495323973,"results":"81","hashOfConfig":"45"},{"size":551,"mtime":1657495323973,"results":"82","hashOfConfig":"45"},{"size":1944,"mtime":1657495323973,"results":"83","hashOfConfig":"45"},{"size":1139,"mtime":1657495323973,"results":"84","hashOfConfig":"45"},{"size":599,"mtime":1657495323973,"results":"85","hashOfConfig":"45"},{"size":1762,"mtime":1657495323973,"results":"86","hashOfConfig":"45"},{"size":1363,"mtime":1657495323973,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lqp699",{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\index.tsx",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\App.tsx",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\context\\index.tsx",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\styles\\global.ts",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\routes\\index.tsx",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\context\\DetailsSerie\\index.tsx",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\context\\TrailerModal\\index.tsx",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\context\\HomeMovies\\index.tsx",["182"],"import { \r\n    createContext, \r\n    Dispatch, \r\n    ReactNode, \r\n    SetStateAction,\r\n    useState,\r\n    useEffect,\r\n    useContext\r\n} from 'react'\r\nimport Tmdb from '../../api/Tmdb'\r\nimport Youtube from '../../api/Youtube'\r\nimport { DetailsSerieContext} from '../DetailsSerie'\r\n\r\ntype HomeMovies = [\r\n    {  \r\n        slug:'Netflix',\r\n        title:'Originais Netflix',\r\n        movies: Serie[];\r\n    },\r\n\r\n    {\r\n        slug:'Popular'\r\n        title:'Populares',\r\n        movies:Serie[] | Movie[]\r\n    },\r\n\r\n    {\r\n        slug:'Em alta',\r\n        title:'Séries em alta',\r\n        movies:Serie[]\r\n    },\r\n]\r\ntype Serie = {\r\n    name:string,\r\n    id:string;\r\n    vote_average:number,\r\n    first_air_date:string,\r\n    number_of_seasons:number,\r\n    overview:string,\r\n    genres:Genre[],\r\n    backdrop_path:string,\r\n    poster_path:string,\r\n    original_name:string\r\n}\r\n\r\ntype Genre = {\r\n    name:string\r\n}\r\n\r\ntype Movie = Omit<Serie, 'first_air_date' | 'number_of_seasons'>\r\n\r\ntype HomeMoviesContextProps = {\r\n    homeMovies: HomeMovies,\r\n    setHomeMovies:Dispatch<SetStateAction<HomeMovies>>\r\n\r\n}\r\nconst defaultValue = {\r\n    homeMovies:[] as unknown as HomeMovies,\r\n    setHomeMovies: () => {}\r\n}\r\n\r\nexport const HomeMoviesContext = createContext<HomeMoviesContextProps>(defaultValue)\r\n\r\ninterface HomeMoviesProviderProps {\r\n    children:ReactNode\r\n} \r\n\r\nexport const HomeMoviesProvider = ({children}: HomeMoviesProviderProps) => {\r\n    const [ homeMovies, setHomeMovies ] = useState<HomeMovies>(defaultValue.homeMovies)\r\n    const { setDetailsSerie, detailsSerie} = useContext(DetailsSerieContext)\r\n    useEffect(() => {\r\n        const loadPage = async() => {\r\n          const movies  = await Tmdb.getHomeMovies() as HomeMovies\r\n          setHomeMovies(movies)\r\n          \r\n          const netflixSeries = movies.filter(list => list.slug === \"Netflix\")[0].movies\r\n          const randomSerie = netflixSeries[Math.floor(Math.random() * (netflixSeries.length - 1) )] \r\n          const detailsRandomSerie = await Tmdb.getDetailsSerie(randomSerie.id) \r\n          const trailerKey = await Youtube.getTrailer(detailsRandomSerie.name)\r\n          const detailsSerieWithTrailer = Object.assign(detailsRandomSerie, {trailerKey}) \r\n          \r\n          setDetailsSerie(detailsSerieWithTrailer)\r\n          console.log(detailsSerie, homeMovies)\r\n        } \r\n        \r\n    \r\n        loadPage()\r\n      }, [])\r\n\r\n    return (\r\n        <HomeMoviesContext.Provider \r\n            value={\r\n                {\r\n                    homeMovies,\r\n                    setHomeMovies\r\n                }\r\n            }>\r\n            {\r\n                children\r\n            }\r\n        </HomeMoviesContext.Provider>\r\n    )\r\n}","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\pages\\Profiles\\index.tsx",["183"],"import { Header } from \"../../components/Header\"\r\nimport { Profile } from \"../../components/Profile\"\r\nimport { AddProfile } from \"../../components/AddProfile\"\r\nimport { Container, ProfilesContainer, ManageProfilesButton} from \"./style\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nexport const Profiles = () => {\r\n    const navigate = useNavigate()\r\n    \r\n    return (\r\n        <Container>\r\n            <Header />\r\n            <h1>Quem está assistindo ?</h1>\r\n            \r\n            <div>\r\n                <ProfilesContainer>\r\n                    <Profile name=\"Jean\" urlImage=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"/>\r\n                    <Profile name=\"Renata\" urlImage=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"/>\r\n                    <Profile name=\"Renata\" urlImage=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"/>\r\n                    <Profile name=\"Renata\" urlImage=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"/>\r\n                    <AddProfile />\r\n                </ProfilesContainer>\r\n                <ManageProfilesButton>Gerenciar perfils</ManageProfilesButton>\r\n            </div>\r\n\r\n        </Container>\r\n    )\r\n}","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\pages\\Login\\index.tsx",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\pages\\Browse\\index.tsx",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\pages\\CreateProfile\\index.tsx",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\pages\\Register\\index.tsx",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\api\\Tmdb\\index.ts",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\api\\Youtube\\index.ts",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\pages\\Profiles\\style.ts",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\pages\\Login\\style.ts",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\pages\\CreateProfile\\style.ts",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\pages\\Register\\style.ts",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\api\\Youtube\\request.ts",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\api\\Tmdb\\request.ts",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\constants\\index.ts",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\Profile\\index.tsx",["184"],"import { Container }from './style'\r\n\r\ninterface ProfileProps {\r\n    name?: string,\r\n    urlImage: string\r\n}\r\n\r\nexport const Profile = ({name, urlImage}: ProfileProps) => {\r\n    return (\r\n        <Container>\r\n            <img src={urlImage} />\r\n            {\r\n                \r\n                name && <span>{name}</span>\r\n                \r\n            }\r\n        </Container>\r\n    )\r\n}","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\Header\\index.tsx",["185"],"import { Container } from './style'\r\nimport logoImg from '../../assets/netflixLogo.svg'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <Container>\r\n            <div>\r\n                <img src={logoImg} />\r\n            </div>\r\n        </Container>\r\n    )\r\n}","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\FormBox\\index.tsx",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\TrailerModal\\index.tsx",["186"],"import { useContext, useEffect } from 'react'\r\nimport { TrailerModalContext } from '../../context/TrailerModal'\r\nimport { ContainerModal, CloseModal } from './style'\r\n\r\ninterface TrailerModalProps {\r\n    videoKey:string\r\n}\r\nexport const TrailerModal = ({videoKey}: TrailerModalProps) => {\r\n    const { closeTrailerModal, isTrailerModalOpen} = useContext(TrailerModalContext)\r\n    useEffect(() => {\r\n        \r\n        function loadVideo() {\r\n            let player = new window.YT.Player('player', {\r\n                events: {\r\n                  onReady: onPlayerReady,\r\n                },\r\n              });\r\n            \r\n              /* Tinha um event */\r\n            function onPlayerReady() {\r\n                const buttonPause = document.getElementById('closeModal') as HTMLSpanElement\r\n                buttonPause.addEventListener('click',() => {\r\n                    player.pauseVideo()\r\n                })\r\n            }\r\n        }\r\n\r\n        if(!window.YT){\r\n            const tag = document.createElement('script');\r\n            tag.src = 'https://www.youtube.com/iframe_api';\r\n            \r\n            window.onYouTubeIframeAPIReady = loadVideo\r\n\r\n            const firstScriptTag = document.getElementsByTagName('script')[0];\r\n\r\n            if(firstScriptTag.parentNode) {\r\n                firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n            }\r\n        }else {\r\n            loadVideo()\r\n        }\r\n\r\n\r\n        window.addEventListener('click',(e) => {\r\n            const target = e.target\r\n            const modal = document.querySelector('#root > div')\r\n            if(target === modal) {\r\n                closeTrailerModal()\r\n            }\r\n            \r\n        })\r\n    })\r\n    return (\r\n        <ContainerModal showModal={isTrailerModalOpen}>\r\n            <iframe id=\"player\" width=\"853\" height=\"480\" src={`https://www.youtube.com/embed/${videoKey}?enablejsapi=1`} frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n            <CloseModal id=\"closeModal\" onClick={closeTrailerModal} >&times;</CloseModal>\r\n        </ContainerModal>\r\n    )\r\n}\r\n\r\n","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\Loader\\index.tsx",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\BrowseHeader\\index.tsx",["187","188","189","190"],"import {useState, useEffect} from 'react'\r\nimport {Container, Navigation} from './style' \r\nimport logoImg from '../../assets/netflixLogo.svg'\r\n\r\nconst Header = () => {\r\n    const [haveBackground, setBackground] = useState(false) \r\n\r\n    useEffect(() => {   \r\n        const watchScroll = () => {\r\n            if(window.scrollY > 170) {\r\n                setBackground(true)\r\n            }else {\r\n                setBackground(false)\r\n            }\r\n        }\r\n        window.addEventListener('scroll',watchScroll)\r\n    })\r\n\r\n    return (\r\n        <Container background={haveBackground}>\r\n            <div>\r\n\r\n                <div>\r\n                    <img src={logoImg} alt=\"Netflix Logo\" />\r\n                </div>\r\n                \r\n            <Navigation>\r\n                <ul>\r\n                    <li><a href=\"#\">Início</a></li>\r\n                    <li><a href=\"#\">Séries</a></li>\r\n                    <li><a href=\"#\">Filmes</a></li>\r\n                    <li><a href=\"#\">Minha Lista</a></li>\r\n                </ul>\r\n            </Navigation>\r\n            </div>\r\n\r\n            <div>\r\n                <input type=\"text\" placeholder=\"Buscar\"/>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Header","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\MainSerie\\index.tsx",["191"],"import playButton from '../../assets/playButton.svg' \r\nimport arrowDown from '../../assets/arrowDown.svg'\r\nimport { useContext } from 'react'\r\nimport { DetailsSerieContext } from '../../context/DetailsSerie'\r\nimport { \r\n    Container, \r\n    DetailsContainer, \r\n    InfoContainer, \r\n    ContainerButtons, \r\n    Overview, \r\n    ButtonScrollDown \r\n} from './style'\r\nimport { TrailerModalContext } from '../../context/TrailerModal'\r\n\r\n\r\nconst PrincipalSerie = () => {\r\n    const { detailsSerie } = useContext(DetailsSerieContext)\r\n    const { openTrailerModal } = useContext(TrailerModalContext)\r\n\r\n    if(detailsSerie.name){\r\n        return (\r\n            <Container background={`https://image.tmdb.org/t/p/original/${detailsSerie.backdrop_path}`}>   \r\n                <DetailsContainer>\r\n                    <h1>{detailsSerie.name}</h1>\r\n                    <InfoContainer>\r\n                        <p>{detailsSerie.vote_average} Votos</p>\r\n                        <p>{new Date(detailsSerie.first_air_date).getFullYear()}</p>\r\n                        <p>{detailsSerie.number_of_seasons} Temporada{detailsSerie.number_of_seasons > 1 &&'s'}</p>\r\n                    </InfoContainer>\r\n                    <Overview>{detailsSerie.overview}</Overview>\r\n                    <ContainerButtons>\r\n    \r\n                        <button onClick={openTrailerModal}><img src={playButton} />Assistir trailer</button>\r\n                        <button >+ Minha lista</button>\r\n                    </ContainerButtons>\r\n                    <p><strong>Gêneros</strong>: {detailsSerie.genres.map(genre => genre.name + ' ')}</p>\r\n                </DetailsContainer>\r\n                <ButtonScrollDown>\r\n                        <img src={arrowDown} alt=\"Arrow Down\"/>\r\n                </ButtonScrollDown>\r\n            </Container>\r\n        )\r\n    }\r\n    return <h1>Nada</h1>\r\n}\r\n\r\nexport default PrincipalSerie","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\MovieListsWrapper\\index.tsx",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\AddProfile\\index.tsx",["192"],"import { Container, Circle } from \"./style\"\r\nimport plusImg from '../../assets/plus.svg'\r\n\r\nexport const AddProfile = () => {\r\n  return (\r\n    <Container>\r\n        <Circle>\r\n            <img src={plusImg} />\r\n        </Circle>\r\n        <span>Adicionar perfil</span>\r\n    </Container>   \r\n  )\r\n}\r\n","C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\constants\\user-data-key.ts",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\constants\\user-key.ts",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\Profile\\style.ts",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\Header\\style.ts",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\TrailerModal\\style.ts",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\FormBox\\style.ts",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\Loader\\style.ts",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\MainSerie\\style.ts",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\BrowseHeader\\style.ts",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\AddProfile\\style.ts",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\MovieList\\index.tsx",[],"C:\\Users\\jeanv\\OneDrive\\Documentos\\Netflix-clone\\src\\components\\MovieList\\style.ts",[],{"ruleId":"193","severity":1,"message":"194","line":88,"column":10,"nodeType":"195","endLine":88,"endColumn":12,"suggestions":"196"},{"ruleId":"197","severity":1,"message":"198","line":8,"column":11,"nodeType":"199","messageId":"200","endLine":8,"endColumn":19},{"ruleId":"201","severity":1,"message":"202","line":11,"column":13,"nodeType":"203","endLine":11,"endColumn":35},{"ruleId":"201","severity":1,"message":"202","line":8,"column":17,"nodeType":"203","endLine":8,"endColumn":38},{"ruleId":"204","severity":1,"message":"205","line":55,"column":13,"nodeType":"203","endLine":55,"endColumn":251},{"ruleId":"206","severity":1,"message":"207","line":29,"column":25,"nodeType":"203","endLine":29,"endColumn":37},{"ruleId":"206","severity":1,"message":"207","line":30,"column":25,"nodeType":"203","endLine":30,"endColumn":37},{"ruleId":"206","severity":1,"message":"207","line":31,"column":25,"nodeType":"203","endLine":31,"endColumn":37},{"ruleId":"206","severity":1,"message":"207","line":32,"column":25,"nodeType":"203","endLine":32,"endColumn":37},{"ruleId":"201","severity":1,"message":"202","line":33,"column":60,"nodeType":"203","endLine":33,"endColumn":84},{"ruleId":"201","severity":1,"message":"202","line":8,"column":13,"nodeType":"203","endLine":8,"endColumn":34},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'detailsSerie', 'homeMovies', and 'setDetailsSerie'. Either include them or remove the dependency array.","ArrayExpression",["208"],"@typescript-eslint/no-unused-vars","'navigate' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",{"desc":"209","fix":"210"},"Update the dependencies array to be: [detailsSerie, homeMovies, setDetailsSerie]",{"range":"211","text":"212"},[2396,2398],"[detailsSerie, homeMovies, setDetailsSerie]"]