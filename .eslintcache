[{"/home/jean/Netflix-clone/src/index.tsx":"1","/home/jean/Netflix-clone/src/App.tsx":"2","/home/jean/Netflix-clone/src/context/index.tsx":"3","/home/jean/Netflix-clone/src/styles/global.ts":"4","/home/jean/Netflix-clone/src/routes/index.tsx":"5","/home/jean/Netflix-clone/src/context/TrailerModal/index.tsx":"6","/home/jean/Netflix-clone/src/context/DetailsSerie/index.tsx":"7","/home/jean/Netflix-clone/src/context/HomeMovies/index.tsx":"8","/home/jean/Netflix-clone/src/pages/Login/index.tsx":"9","/home/jean/Netflix-clone/src/pages/Browse/index.tsx":"10","/home/jean/Netflix-clone/src/pages/Register/index.tsx":"11","/home/jean/Netflix-clone/src/api/Tmdb/index.ts":"12","/home/jean/Netflix-clone/src/api/Youtube/index.ts":"13","/home/jean/Netflix-clone/src/pages/Login/style.ts":"14","/home/jean/Netflix-clone/src/pages/Register/style.ts":"15","/home/jean/Netflix-clone/src/api/Youtube/request.ts":"16","/home/jean/Netflix-clone/src/api/Tmdb/request.ts":"17","/home/jean/Netflix-clone/src/constants/index.ts":"18","/home/jean/Netflix-clone/src/components/Header/index.tsx":"19","/home/jean/Netflix-clone/src/components/FormBox/index.tsx":"20","/home/jean/Netflix-clone/src/components/MovieListsWrapper/index.tsx":"21","/home/jean/Netflix-clone/src/components/TrailerModal/index.tsx":"22","/home/jean/Netflix-clone/src/components/MainSerie/index.tsx":"23","/home/jean/Netflix-clone/src/components/Loader/index.tsx":"24","/home/jean/Netflix-clone/src/components/BrowseHeader/index.tsx":"25","/home/jean/Netflix-clone/src/constants/user-data-key.ts":"26","/home/jean/Netflix-clone/src/constants/user-key.ts":"27","/home/jean/Netflix-clone/src/components/Header/style.ts":"28","/home/jean/Netflix-clone/src/components/MainSerie/style.ts":"29","/home/jean/Netflix-clone/src/components/FormBox/style.ts":"30","/home/jean/Netflix-clone/src/components/TrailerModal/style.ts":"31","/home/jean/Netflix-clone/src/components/BrowseHeader/style.ts":"32","/home/jean/Netflix-clone/src/components/Loader/style.ts":"33","/home/jean/Netflix-clone/src/components/MovieList/index.tsx":"34","/home/jean/Netflix-clone/src/components/MovieList/style.ts":"35"},{"size":232,"mtime":1672690246939,"results":"36","hashOfConfig":"37"},{"size":290,"mtime":1672690246939,"results":"38","hashOfConfig":"37"},{"size":583,"mtime":1672690246939,"results":"39","hashOfConfig":"37"},{"size":792,"mtime":1672690246943,"results":"40","hashOfConfig":"37"},{"size":501,"mtime":1674472045609,"results":"41","hashOfConfig":"37"},{"size":984,"mtime":1672690246939,"results":"42","hashOfConfig":"37"},{"size":1157,"mtime":1672690246939,"results":"43","hashOfConfig":"37"},{"size":2600,"mtime":1672690246939,"results":"44","hashOfConfig":"37"},{"size":2448,"mtime":1674472706492,"results":"45","hashOfConfig":"37"},{"size":784,"mtime":1672690246939,"results":"46","hashOfConfig":"37"},{"size":3395,"mtime":1674472299779,"results":"47","hashOfConfig":"37"},{"size":1180,"mtime":1672690246939,"results":"48","hashOfConfig":"37"},{"size":399,"mtime":1672690246939,"results":"49","hashOfConfig":"37"},{"size":570,"mtime":1672690246943,"results":"50","hashOfConfig":"37"},{"size":457,"mtime":1672690246943,"results":"51","hashOfConfig":"37"},{"size":118,"mtime":1672690246939,"results":"52","hashOfConfig":"37"},{"size":102,"mtime":1672690246939,"results":"53","hashOfConfig":"37"},{"size":85,"mtime":1672690246939,"results":"54","hashOfConfig":"37"},{"size":254,"mtime":1672690246939,"results":"55","hashOfConfig":"37"},{"size":322,"mtime":1674472090288,"results":"56","hashOfConfig":"37"},{"size":477,"mtime":1672690246939,"results":"57","hashOfConfig":"37"},{"size":2114,"mtime":1672690246939,"results":"58","hashOfConfig":"37"},{"size":1863,"mtime":1674473850097,"results":"59","hashOfConfig":"37"},{"size":183,"mtime":1672690246939,"results":"60","hashOfConfig":"37"},{"size":1183,"mtime":1672690246939,"results":"61","hashOfConfig":"37"},{"size":55,"mtime":1672690246939,"results":"62","hashOfConfig":"37"},{"size":46,"mtime":1672690246939,"results":"63","hashOfConfig":"37"},{"size":256,"mtime":1672690246939,"results":"64","hashOfConfig":"37"},{"size":1853,"mtime":1674473737679,"results":"65","hashOfConfig":"37"},{"size":1911,"mtime":1674472132808,"results":"66","hashOfConfig":"37"},{"size":537,"mtime":1672690246939,"results":"67","hashOfConfig":"37"},{"size":1084,"mtime":1672690246939,"results":"68","hashOfConfig":"37"},{"size":528,"mtime":1672690246939,"results":"69","hashOfConfig":"37"},{"size":1700,"mtime":1672690246939,"results":"70","hashOfConfig":"37"},{"size":1297,"mtime":1672690246939,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"lmai8g",{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"/home/jean/Netflix-clone/src/index.tsx",[],["148","149"],"/home/jean/Netflix-clone/src/App.tsx",[],"/home/jean/Netflix-clone/src/context/index.tsx",[],"/home/jean/Netflix-clone/src/styles/global.ts",[],"/home/jean/Netflix-clone/src/routes/index.tsx",[],"/home/jean/Netflix-clone/src/context/TrailerModal/index.tsx",[],"/home/jean/Netflix-clone/src/context/DetailsSerie/index.tsx",[],"/home/jean/Netflix-clone/src/context/HomeMovies/index.tsx",["150"],"import { \n    createContext, \n    Dispatch, \n    ReactNode, \n    SetStateAction,\n    useState,\n    useEffect,\n    useContext\n} from 'react'\nimport Tmdb from '../../api/Tmdb'\nimport Youtube from '../../api/Youtube'\nimport { DetailsSerieContext} from '../DetailsSerie'\n\ntype HomeMovies = [\n    {  \n        slug:'Netflix',\n        title:'Originais Netflix',\n        movies: Serie[];\n    },\n\n    {\n        slug:'Popular'\n        title:'Populares',\n        movies:Serie[] | Movie[]\n    },\n\n    {\n        slug:'Em alta',\n        title:'Séries em alta',\n        movies:Serie[]\n    },\n]\ntype Serie = {\n    name:string,\n    id:string;\n    vote_average:number,\n    first_air_date:string,\n    number_of_seasons:number,\n    overview:string,\n    genres:Genre[],\n    backdrop_path:string,\n    poster_path:string,\n    original_name:string\n}\n\ntype Genre = {\n    name:string\n}\n\ntype Movie = Omit<Serie, 'first_air_date' | 'number_of_seasons'>\n\ntype HomeMoviesContextProps = {\n    homeMovies: HomeMovies,\n    setHomeMovies:Dispatch<SetStateAction<HomeMovies>>\n\n}\nconst defaultValue = {\n    homeMovies:[] as unknown as HomeMovies,\n    setHomeMovies: () => {}\n}\n\nexport const HomeMoviesContext = createContext<HomeMoviesContextProps>(defaultValue)\n\ninterface HomeMoviesProviderProps {\n    children:ReactNode\n} \n\nexport const HomeMoviesProvider = ({children}: HomeMoviesProviderProps) => {\n    const [ homeMovies, setHomeMovies ] = useState<HomeMovies>(defaultValue.homeMovies)\n    const { setDetailsSerie, detailsSerie} = useContext(DetailsSerieContext)\n    useEffect(() => {\n        const loadPage = async() => {\n          const movies  = await Tmdb.getHomeMovies() as HomeMovies\n          setHomeMovies(movies)\n          \n          const netflixSeries = movies.filter(list => list.slug === \"Netflix\")[0].movies\n          const randomSerie = netflixSeries[Math.floor(Math.random() * (netflixSeries.length - 1) )] \n          const detailsRandomSerie = await Tmdb.getDetailsSerie(randomSerie.id) \n          const trailerKey = await Youtube.getTrailer(detailsRandomSerie.name)\n          const detailsSerieWithTrailer = Object.assign(detailsRandomSerie, {trailerKey}) \n          \n          setDetailsSerie(detailsSerieWithTrailer)\n          console.log(detailsSerie, homeMovies)\n        } \n        \n    \n        loadPage()\n      }, [])\n\n    return (\n        <HomeMoviesContext.Provider \n            value={\n                {\n                    homeMovies,\n                    setHomeMovies\n                }\n            }>\n            {\n                children\n            }\n        </HomeMoviesContext.Provider>\n    )\n}","/home/jean/Netflix-clone/src/pages/Login/index.tsx",["151"],"import { Header } from '../../components/Header'\nimport { FormBox } from '../../components/FormBox'\nimport { Background, Container } from './style'\nimport { MouseEvent, useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { USER_DATA_KEY, USER_KEY } from '../../constants'\nimport { User } from '../../common/types'\nimport { ReactNotifications, Store} from 'react-notifications-component'\n\nexport const Login = () => {\n    const [ email, setEmail ] = useState('')\n    const [ password, setPassword ] = useState('')\n\n    const navigate = useNavigate()\n\n    const login = (event:MouseEvent<HTMLButtonElement>) => {\n        event.preventDefault()\n        const userCredentialsStorage = JSON.parse(localStorage.getItem(USER_KEY) as string) as User\n        console.log(userCredentialsStorage)\n        console.log(email, password)\n        const isCorrectCredentials = userCredentialsStorage?.email === email && userCredentialsStorage?.password === password \n\n\n        if(isCorrectCredentials ){\n            navigate('/browse')\n        }else if( isCorrectCredentials === false ){\n            Store.addNotification({\n                title:'Login inválido',\n                message:'Verifique se a senha ou o email digitado é válido',\n                type:'danger',\n                container:'top-right',\n                dismiss:{\n                    duration:2000,\n                    onScreen:true\n                }\n            })\n        }\n    }\n\n   \n\n    return (\n        <Container>\n            <Header /> \n            <Background/>\n            <ReactNotifications />\n            <FormBox>\n                <h1>Entrar</h1>\n                <input type=\"email\" placeholder=\"Email ou número de telefone\" onChange={(ev) => setEmail(ev.target.value)}/>\n                \n                <input type= \"password\" placeholder=\"Senha\" onChange={(ev) => setPassword(ev.target.value)}/>\n                <button type=\"submit\" onClick={login}>\n                   Entrar\n                </button>\n                <div>\n                    <label>\n                        <input type=\"checkbox\" />\n                        Lembre-se de mim\n                    </label>\n                    <a href=\"/\">Precisa de ajuda?</a>\n                </div>\n                <span>Novo por aqui? <Link to=\"/register\">Registre-se agora</Link>.</span>\n                \n            </FormBox>\n            \n        </Container>\n        \n        \n    )\n}","/home/jean/Netflix-clone/src/pages/Browse/index.tsx",[],"/home/jean/Netflix-clone/src/pages/Register/index.tsx",[],"/home/jean/Netflix-clone/src/api/Tmdb/index.ts",[],"/home/jean/Netflix-clone/src/api/Youtube/index.ts",[],"/home/jean/Netflix-clone/src/pages/Login/style.ts",[],"/home/jean/Netflix-clone/src/pages/Register/style.ts",[],"/home/jean/Netflix-clone/src/api/Youtube/request.ts",[],"/home/jean/Netflix-clone/src/api/Tmdb/request.ts",[],"/home/jean/Netflix-clone/src/constants/index.ts",[],"/home/jean/Netflix-clone/src/components/Header/index.tsx",["152"],"import { Container } from './style'\nimport logoImg from '../../assets/netflixLogo.svg'\n\nexport const Header = () => {\n    return (\n        <Container>\n            <div>\n                <img src={logoImg} />\n            </div>\n        </Container>\n    )\n}","/home/jean/Netflix-clone/src/components/FormBox/index.tsx",[],"/home/jean/Netflix-clone/src/components/MovieListsWrapper/index.tsx",[],"/home/jean/Netflix-clone/src/components/TrailerModal/index.tsx",["153"],"import { useContext, useEffect } from 'react'\nimport { TrailerModalContext } from '../../context/TrailerModal'\nimport { ContainerModal, CloseModal } from './style'\n\ninterface TrailerModalProps {\n    videoKey:string\n}\nexport const TrailerModal = ({videoKey}: TrailerModalProps) => {\n    const { closeTrailerModal, isTrailerModalOpen} = useContext(TrailerModalContext)\n    useEffect(() => {\n        \n        function loadVideo() {\n            let player = new window.YT.Player('player', {\n                events: {\n                  onReady: onPlayerReady,\n                },\n              });\n            \n              /* Tinha um event */\n            function onPlayerReady() {\n                const buttonPause = document.getElementById('closeModal') as HTMLSpanElement\n                buttonPause.addEventListener('click',() => {\n                    player.pauseVideo()\n                })\n            }\n        }\n\n        if(!window.YT){\n            const tag = document.createElement('script');\n            tag.src = 'https://www.youtube.com/iframe_api';\n            \n            window.onYouTubeIframeAPIReady = loadVideo\n\n            const firstScriptTag = document.getElementsByTagName('script')[0];\n\n            if(firstScriptTag.parentNode) {\n                firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n            }\n        }else {\n            loadVideo()\n        }\n\n\n        window.addEventListener('click',(e) => {\n            const target = e.target\n            const modal = document.querySelector('#root > div')\n            if(target === modal) {\n                closeTrailerModal()\n            }\n            \n        })\n    })\n    return (\n        <ContainerModal showModal={isTrailerModalOpen}>\n            <iframe id=\"player\" width=\"853\" height=\"480\" src={`https://www.youtube.com/embed/${videoKey}?enablejsapi=1`} frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n            <CloseModal id=\"closeModal\" onClick={closeTrailerModal} >&times;</CloseModal>\n        </ContainerModal>\n    )\n}\n\n","/home/jean/Netflix-clone/src/components/MainSerie/index.tsx",["154"],"/home/jean/Netflix-clone/src/components/Loader/index.tsx",[],"/home/jean/Netflix-clone/src/components/BrowseHeader/index.tsx",["155","156","157","158"],"import {useState, useEffect} from 'react'\nimport {Container, Navigation} from './style' \nimport logoImg from '../../assets/netflixLogo.svg'\n\nconst Header = () => {\n    const [haveBackground, setBackground] = useState(false) \n\n    useEffect(() => {   \n        const watchScroll = () => {\n            if(window.scrollY > 170) {\n                setBackground(true)\n            }else {\n                setBackground(false)\n            }\n        }\n        window.addEventListener('scroll',watchScroll)\n    })\n\n    return (\n        <Container background={haveBackground}>\n            <div>\n\n                <div>\n                    <img src={logoImg} alt=\"Netflix Logo\" />\n                </div>\n                \n            <Navigation>\n                <ul>\n                    <li><a href=\"#\">Início</a></li>\n                    <li><a href=\"#\">Séries</a></li>\n                    <li><a href=\"#\">Filmes</a></li>\n                    <li><a href=\"#\">Minha Lista</a></li>\n                </ul>\n            </Navigation>\n            </div>\n\n            <div>\n                <input type=\"text\" placeholder=\"Buscar\"/>\n            </div>\n        </Container>\n    )\n}\n\nexport default Header","/home/jean/Netflix-clone/src/constants/user-data-key.ts",[],"/home/jean/Netflix-clone/src/constants/user-key.ts",[],"/home/jean/Netflix-clone/src/components/Header/style.ts",[],"/home/jean/Netflix-clone/src/components/MainSerie/style.ts",[],"/home/jean/Netflix-clone/src/components/FormBox/style.ts",[],"/home/jean/Netflix-clone/src/components/TrailerModal/style.ts",[],"/home/jean/Netflix-clone/src/components/BrowseHeader/style.ts",[],"/home/jean/Netflix-clone/src/components/Loader/style.ts",[],"/home/jean/Netflix-clone/src/components/MovieList/index.tsx",[],"/home/jean/Netflix-clone/src/components/MovieList/style.ts",[],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":88,"column":10,"nodeType":"165","endLine":88,"endColumn":12,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":6,"column":10,"nodeType":"169","messageId":"170","endLine":6,"endColumn":23},{"ruleId":"171","severity":1,"message":"172","line":8,"column":17,"nodeType":"173","endLine":8,"endColumn":38},{"ruleId":"174","severity":1,"message":"175","line":55,"column":13,"nodeType":"173","endLine":55,"endColumn":251},{"ruleId":"171","severity":1,"message":"172","line":33,"column":60,"nodeType":"173","endLine":33,"endColumn":84},{"ruleId":"176","severity":1,"message":"177","line":29,"column":25,"nodeType":"173","endLine":29,"endColumn":37},{"ruleId":"176","severity":1,"message":"177","line":30,"column":25,"nodeType":"173","endLine":30,"endColumn":37},{"ruleId":"176","severity":1,"message":"177","line":31,"column":25,"nodeType":"173","endLine":31,"endColumn":37},{"ruleId":"176","severity":1,"message":"177","line":32,"column":25,"nodeType":"173","endLine":32,"endColumn":37},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'detailsSerie', 'homeMovies', and 'setDetailsSerie'. Either include them or remove the dependency array.","ArrayExpression",["180"],"@typescript-eslint/no-unused-vars","'USER_DATA_KEY' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"181","fix":"182"},"Update the dependencies array to be: [detailsSerie, homeMovies, setDetailsSerie]",{"range":"183","text":"184"},[2309,2311],"[detailsSerie, homeMovies, setDetailsSerie]"]