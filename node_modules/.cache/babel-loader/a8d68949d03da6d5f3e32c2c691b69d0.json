{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeanv\\\\OneDrive\\\\Documentos\\\\Netflix-clone\\\\src\\\\context\\\\TrailerModal\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultValue = {\n  isTrailerModalOpen: false,\n  closeTrailerModal: () => {},\n  openTrailerModal: () => {}\n};\nexport const TrailerModalContext = /*#__PURE__*/createContext(defaultValue);\nexport const TrailerModalProvider = ({\n  children\n}) => {\n  _s();\n\n  const [isTrailerModalOpen, setIsTrailerModalOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(TrailerModalContext.Provider, {\n    value: {\n      isTrailerModalOpen,\n      closeTrailerModal: () => setIsTrailerModalOpen(false),\n      openTrailerModal: () => setIsTrailerModalOpen(true)\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TrailerModalProvider, \"a68Jigb3bV5CtTwVeqGBiXjiaOQ=\");\n\n_c = TrailerModalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrailerModalProvider\");","map":{"version":3,"sources":["C:/Users/jeanv/OneDrive/Documentos/Netflix-clone/src/context/TrailerModal/index.tsx"],"names":["createContext","useState","defaultValue","isTrailerModalOpen","closeTrailerModal","openTrailerModal","TrailerModalContext","TrailerModalProvider","children","setIsTrailerModalOpen"],"mappings":";;;AAAA,SACIA,aADJ,EAEIC,QAFJ,QAIO,OAJP;;AAaA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,kBAAkB,EAAE,KADH;AAEjBC,EAAAA,iBAAiB,EAAE,MAAM,CAAE,CAFV;AAGjBC,EAAAA,gBAAgB,EAAE,MAAM,CAAE;AAHT,CAArB;AAMA,OAAO,MAAMC,mBAAmB,gBAAGN,aAAa,CAA2BE,YAA3B,CAAzC;AAMP,OAAO,MAAMK,oBAAoB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAA2C;AAAA;;AAC3E,QAAM,CAAEL,kBAAF,EAAsBM,qBAAtB,IAAgDR,QAAQ,CAAC,KAAD,CAA9D;AACA,sBACI,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAE;AACjCE,MAAAA,kBADiC;AAEjCC,MAAAA,iBAAiB,EAAE,MAAMK,qBAAqB,CAAC,KAAD,CAFb;AAGjCJ,MAAAA,gBAAgB,EAAE,MAAMI,qBAAqB,CAAC,IAAD;AAHZ,KAArC;AAAA,cAMQD;AANR;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAbM;;GAAMD,oB;;KAAAA,oB","sourcesContent":["import { \r\n    createContext,\r\n    useState,\r\n    ReactNode,\r\n} from 'react'\r\n\r\n\r\ntype TrailerModalContextProps = {\r\n    isTrailerModalOpen: boolean,\r\n    closeTrailerModal: () => void;\r\n    openTrailerModal: () => void\r\n    \r\n}\r\nconst defaultValue = {\r\n    isTrailerModalOpen: false,\r\n    closeTrailerModal: () => {},\r\n    openTrailerModal: () => {}\r\n}\r\n\r\nexport const TrailerModalContext = createContext<TrailerModalContextProps>(defaultValue)\r\n\r\ninterface TrailerModalProviderProps {\r\n    children: ReactNode\r\n}\r\n\r\nexport const TrailerModalProvider = ({children}: TrailerModalProviderProps) => {\r\n    const [ isTrailerModalOpen, setIsTrailerModalOpen ] = useState(false)\r\n    return (\r\n        <TrailerModalContext.Provider value={{\r\n            isTrailerModalOpen,\r\n            closeTrailerModal: () => setIsTrailerModalOpen(false),\r\n            openTrailerModal: () => setIsTrailerModalOpen(true),\r\n        }}>\r\n            {\r\n                children\r\n            }\r\n        </TrailerModalContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}