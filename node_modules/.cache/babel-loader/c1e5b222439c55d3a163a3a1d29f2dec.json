{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeanv\\\\OneDrive\\\\Documentos\\\\Netflix-clone\\\\src\\\\components\\\\MovieList\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { ContainerList, ContainerMovies, MoveListToLeft, MoveListToRight } from './style';\nimport arrowLeft from \"../../assets/arrowLeft.svg\";\nimport arrowRight from \"../../assets/arrowRight.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MovieList = ({\n  title,\n  movies\n}) => {\n  _s();\n\n  const [scrollX, setScrollX] = useState(-300);\n\n  const moveScrollXToLeft = () => {\n    let x = scrollX + Math.round(window.innerWidth / 2);\n\n    if (x > 0) {\n      x = 0;\n    }\n\n    setScrollX(x);\n  };\n\n  const moveScrollXToRight = () => {\n    let x = scrollX - Math.round(window.innerWidth / 2);\n    const containerMoviesWidth = 180 * movies.length;\n\n    if (x < window.innerWidth - containerMoviesWidth) {\n      x = window.innerWidth - containerMoviesWidth - 180 * 2.5;\n    }\n\n    setScrollX(x);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContainerList, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ContainerMovies, {\n      scrollX: scrollX,\n      width: 180 * movies.length,\n      children: [/*#__PURE__*/_jsxDEV(MoveListToLeft, {\n        onClick: moveScrollXToLeft,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: arrowLeft,\n          alt: \"Move list to Left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MoveListToRight, {\n        onClick: moveScrollXToRight,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: arrowRight,\n          alt: \"Move list to Right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w200${movie.poster_path}`,\n          alt: movie.original_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieList, \"Gyb6A7wLSvqbhVBDAG7Jbuft4tk=\");\n\n_c = MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["C:/Users/jeanv/OneDrive/Documentos/Netflix-clone/src/components/MovieList/index.tsx"],"names":["useState","ContainerList","ContainerMovies","MoveListToLeft","MoveListToRight","MovieList","title","movies","scrollX","setScrollX","moveScrollXToLeft","x","Math","round","window","innerWidth","moveScrollXToRight","containerMoviesWidth","length","arrowLeft","arrowRight","map","movie","poster_path","original_name"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SACIC,aADJ,EAEIC,eAFJ,EAGIC,cAHJ,EAIIC,eAJJ,QAKO,SALP;;;;AAkBA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAOC,EAAAA;AAAP,CAAD,KAAoC;AAAA;;AACzD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,CAAC,GAAF,CAAtC;;AAEA,QAAMU,iBAAiB,GAAG,MAAM;AAChC,QAAIC,CAAC,GAAGH,OAAO,GAAGI,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,UAAP,GAAkB,CAA7B,CAAlB;;AACI,QAAGJ,CAAC,GAAG,CAAP,EAAS;AACLA,MAAAA,CAAC,GAAG,CAAJ;AACH;;AACDF,IAAAA,UAAU,CAACE,CAAD,CAAV;AACH,GAND;;AAQA,QAAMK,kBAAkB,GAAG,MAAM;AAC7B,QAAIL,CAAC,GAAGH,OAAO,GAAGI,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,UAAP,GAAkB,CAA7B,CAAlB;AACA,UAAME,oBAAoB,GAAI,MAAMV,MAAM,CAACW,MAA3C;;AAEA,QAAGP,CAAC,GAAIG,MAAM,CAACC,UAAP,GAAoBE,oBAA5B,EAAkD;AAC9CN,MAAAA,CAAC,GAAGG,MAAM,CAACC,UAAP,GAAoBE,oBAApB,GAA2C,MAAM,GAArD;AACH;;AACDR,IAAAA,UAAU,CAACE,CAAD,CAAV;AAEH,GATD;;AAUA,sBACA,QAAC,aAAD;AAAA,4BACI;AAAA,gBAAKL;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,eAAD;AAAiB,MAAA,OAAO,EAAEE,OAA1B;AAAmC,MAAA,KAAK,EAAE,MAAMD,MAAM,CAACW,MAAvD;AAAA,8BACI,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAER,iBAAzB;AAAA,+BACI;AAAK,UAAA,GAAG,EAAES,SAAV;AAAqB,UAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,eAAD;AAAiB,QAAA,OAAO,EAAEH,kBAA1B;AAAA,+BACI;AAAK,UAAA,GAAG,EAAEI,UAAV;AAAsB,UAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ,EASKb,MAAM,CAACc,GAAP,CAAWC,KAAK,iBACb;AAAA,+BACI;AAAK,UAAA,GAAG,EAAG,kCAAiCA,KAAK,CAACC,WAAY,EAA9D;AAAiE,UAAA,GAAG,EAAED,KAAK,CAACE;AAA5E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADH,CATL;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAqBH,CA1CM;;GAAMnB,S;;KAAAA,S","sourcesContent":["import {useState} from 'react'\r\nimport { \r\n    ContainerList, \r\n    ContainerMovies, \r\n    MoveListToLeft, \r\n    MoveListToRight \r\n} from './style'\r\nimport arrowLeft from '../../assets/arrowLeft.svg'\r\nimport arrowRight from '../../assets/arrowRight.svg'\r\n\r\ntype Movie = {\r\n    poster_path:string,\r\n    original_name:string\r\n}\r\ninterface MovieListProps {\r\n    title:string,\r\n    movies:Movie[]\r\n}\r\n\r\nexport const MovieList = ({title,movies}: MovieListProps) => {\r\n    const [scrollX, setScrollX] = useState(-300)\r\n    \r\n    const moveScrollXToLeft = () => {\r\n    let x = scrollX + Math.round(window.innerWidth/2)\r\n        if(x > 0){\r\n            x = 0\r\n        }\r\n        setScrollX(x) \r\n    }\r\n\r\n    const moveScrollXToRight = () => {\r\n        let x = scrollX - Math.round(window.innerWidth/2)\r\n        const containerMoviesWidth = (180 * movies.length)\r\n\r\n        if(x < (window.innerWidth - containerMoviesWidth)){\r\n            x = window.innerWidth - containerMoviesWidth - 180 * 2.5\r\n        }\r\n        setScrollX(x)\r\n    \r\n    }\r\n    return (\r\n    <ContainerList>\r\n        <h1>{title}</h1>\r\n\r\n        <ContainerMovies scrollX={scrollX} width={180 * movies.length}>  \r\n            <MoveListToLeft onClick={moveScrollXToLeft}>\r\n                <img src={arrowLeft} alt=\"Move list to Left\"/>\r\n            </MoveListToLeft>\r\n\r\n            <MoveListToRight onClick={moveScrollXToRight}>\r\n                <img src={arrowRight} alt=\"Move list to Right\"/>\r\n            </MoveListToRight>\r\n\r\n            {movies.map(movie => (\r\n                <div>\r\n                    <img src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`} alt={movie.original_name}/>\r\n                </div>\r\n            ))}\r\n        </ContainerMovies>\r\n    </ContainerList>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}