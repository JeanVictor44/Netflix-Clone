{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeanv\\\\OneDrive\\\\Documentos\\\\Netflix-clone\\\\src\\\\pages\\\\Register\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Header } from '../../components/Header';\nimport { FormBox } from '../../components/FormBox';\nimport { Background } from './style';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { USER_KEY } from '../../constants';\nimport 'react-notifications-component/dist/theme.css';\nimport { ReactNotifications, Store } from 'react-notifications-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Register = () => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirmation, setPasswordConfirmation] = useState('');\n  const navigate = useNavigate(); // Ter um contador guardado no localstorage para a quantidade de usuários\n\n  const register = ev => {\n    ev.preventDefault();\n\n    if (!email || !password || !passwordConfirmation) {\n      Store.addNotification({\n        title: 'Preencha todos os campos',\n        message: 'Para realizar o registro preencha todos os campos',\n        type: 'danger',\n        container: 'top-right',\n        dismiss: {\n          duration: 2000,\n          onScreen: true\n        }\n      });\n    } else if (passwordConfirmation === password) {\n      //Direcionar para página de login\n      const userRegister = JSON.stringify({\n        email,\n        password\n      });\n      Store.addNotification({\n        title: 'Registro realizado com sucesso',\n        message: 'Seu Registro foi realizado com sucesso',\n        type: 'success',\n        container: 'top-right',\n        dismiss: {\n          duration: 2000,\n          onScreen: true\n        }\n      });\n      localStorage.setItem(USER_KEY, userRegister);\n      setTimeout(() => {\n        navigate('/login');\n      }, 2000);\n    } else {\n      Store.addNotification({\n        title: 'Senhas não coincidem',\n        message: 'As senhas devem coincidir para prosseguir com o registro',\n        type: 'danger',\n        container: 'top-right',\n        dismiss: {\n          duration: 2000,\n          onScreen: true\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactNotifications, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormBox, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Registrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email ou n\\xFAmero de telefone\",\n        onChange: ev => setEmail(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Senha\",\n        onChange: ev => setPassword(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirme a senha\",\n        onChange: ev => setPasswordConfirmation(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: register,\n        children: \"Registrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), \"Lembre-se de mim\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Precisa de ajuda?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"J\\xE1 tem uma conta? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Entre agora\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 41\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Register, \"5Iv+t9kE2lvNOuHGMYuZTBquJro=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/jeanv/OneDrive/Documentos/Netflix-clone/src/pages/Register/index.tsx"],"names":["Header","FormBox","Background","Link","useNavigate","useState","USER_KEY","ReactNotifications","Store","Register","email","setEmail","password","setPassword","passwordConfirmation","setPasswordConfirmation","navigate","register","ev","preventDefault","addNotification","title","message","type","container","dismiss","duration","onScreen","userRegister","JSON","stringify","localStorage","setItem","setTimeout","target","value"],"mappings":"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","sourcesContent":["import { Header } from '../../components/Header'\r\nimport { FormBox } from '../../components/FormBox'\r\nimport { Background} from './style'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { useState } from 'react'\r\nimport { USER_KEY } from '../../constants'\r\nimport 'react-notifications-component/dist/theme.css'\r\nimport { ReactNotifications, Store} from 'react-notifications-component'\r\n\r\nexport const Register = () => {\r\n    const [ email, setEmail ] = useState('') \r\n    const [ password, setPassword ] = useState('')\r\n    const [ passwordConfirmation, setPasswordConfirmation] = useState('')\r\n    const navigate = useNavigate()\r\n    \r\n    // Ter um contador guardado no localstorage para a quantidade de usuários\r\n    const register = (ev:React.MouseEvent<HTMLButtonElement>) => {\r\n        ev.preventDefault()\r\n\r\n        if(!email || !password || !passwordConfirmation){\r\n            Store.addNotification({\r\n                title:'Preencha todos os campos',\r\n                message:'Para realizar o registro preencha todos os campos',\r\n                type:'danger',\r\n                container:'top-right',\r\n                dismiss:{\r\n                    duration:2000,\r\n                    onScreen:true\r\n                }\r\n            })\r\n        }else if(passwordConfirmation === password){\r\n            //Direcionar para página de login\r\n            const userRegister = JSON.stringify({\r\n                email,\r\n                password\r\n            })\r\n            Store.addNotification({\r\n                title:'Registro realizado com sucesso',\r\n                message:'Seu Registro foi realizado com sucesso',\r\n                type:'success',\r\n                container:'top-right',\r\n                dismiss:{\r\n                    duration:2000,\r\n                    onScreen:true\r\n                }\r\n            })\r\n            localStorage.setItem( USER_KEY,userRegister)\r\n            setTimeout(() => {\r\n                navigate('/login')\r\n            }, 2000)\r\n            \r\n        }else {\r\n            Store.addNotification({\r\n                title:'Senhas não coincidem',\r\n                message:'As senhas devem coincidir para prosseguir com o registro',\r\n                type:'danger',\r\n                container:'top-right',\r\n                dismiss:{\r\n                    duration:2000,\r\n                    onScreen:true\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header /> \r\n            <Background />\r\n            <ReactNotifications />\r\n            <FormBox >\r\n                <h1>Registrar</h1>\r\n                <input type=\"email\" placeholder=\"Email ou número de telefone\" onChange={(ev) => setEmail(ev.target.value)}/>\r\n                <input type=\"password\" placeholder=\"Senha\" onChange={(ev) => setPassword(ev.target.value)}/>\r\n                <input type=\"password\" placeholder=\"Confirme a senha\" onChange={(ev) => setPasswordConfirmation(ev.target.value)}/>\r\n                <button type=\"submit\" onClick={register} >Registrar</button>\r\n                <div>\r\n                    <label>\r\n                        <input type=\"checkbox\" />\r\n                        Lembre-se de mim\r\n                    </label>\r\n                    <Link to=\"/\">Precisa de ajuda?</Link>\r\n                </div>\r\n                <span>Já tem uma conta? <Link to=\"/login\">Entre agora</Link>.</span>\r\n                \r\n            </FormBox>\r\n            \r\n        </>\r\n        \r\n        \r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}